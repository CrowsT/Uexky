schema {
    query: Query
    mutation: Mutation
}

type Query {
    account(): Account!
    threadSlice(tag: [String] limit: Int! after: String): ThreadSlice!
    thread(id: String): Thread!
}

type Mutation {
    addAccount(): Account!
    setUserName(name: String!): Account!
    pubThread(new: NewThread!): Thread!
    pubPost(new: NewPost!): Post!
}

type SliceInfo {
    firstCursor: String!
    lastCursor: String!
}

scalar Time

// Data Type Defines
type Account {
    token: String!
    names: [String]
}

type NewThread {
    anonymous: Boolean!
    content: String!
    mainTag: String!
    subTag: [String]
    title: String
}

type Thread {
    id: String!
    anonymous: Boolean!
    author: String!
    content: String!
    createdTime: Time!

    mainTag: String!
    subTag: [String]
    title: String
    replies(limit: Int! after: String): PostSlice!
}

type ThreadSlice {
  threads: [Thread]
  sliceInfo: SliceInfo!
}


type NewPost {
    anonymous: Boolean!
    content: String!
    refers: [String!]
}

type Post {
    id: String!
    anonymous: Boolean!
    author: String!
    content: String!
    createdAt: Time!

    refers: [String!]
    refereds: [String!]
}

type PostSlice {
  posts: [Post!]
  sliceInfo: SliceInfo!
}
