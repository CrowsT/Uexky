image: golang:1.10

variables:
  REGISTRY: "registry.gitlab.com"
  IMAGE_NAME: "${REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME}"
  GOPATH_SRC_DIR: /go/src/gitlab.com/${CI_PROJECT_PATH}

stages:
  - test
  - build
  - deploy

# copy source files to $GOPATH
# install deps
before_script:
  - mkdir -p /go/src/gitlab.com/${CI_PROJECT_PATH}
  - cp -r ${CI_PROJECT_DIR}/* ${GOPATH_SRC_DIR}
  - cd ${GOPATH_SRC_DIR}
  - go get github.com/golang/dep/cmd/dep
  - dep ensure

# coverage regex "^total.*?(\d+.\d)%"
test:
  tags:
    - docker
  services:
    - mongo
    - redis
  variables:
    MONGO_URL: "mongodb://mongo"
    REDIS_URL: "redis://redis/0"
  stage: test
  script:
    - go test -v ./... -coverprofile .testCoverage.txt
    - go tool cover -func=.testCoverage.txt

# mininal docker image
# source: https://blog.kloia.com/micro-docker-images-for-go-applications-8a8701130c01
build:
  stage: build
  script:
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .
    - cp main ${CI_PROJECT_DIR}/
  artifacts:
    paths:
      - main
  only:
    - master
    - tags

docker-image:
  image: docker
  stage: deploy
  services:
    - docker:dind
  before_script:
    - /bin/true # skip global before_script
  script:
    - docker build . -t ${IMAGE_NAME}
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${REGISTRY}
    - docker push ${IMAGE_NAME}
  only:
    - master
    - tags
